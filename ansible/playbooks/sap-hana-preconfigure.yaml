
---
- hosts: hana
  remote_user: cloudadmin
  become: true
  become_user: root
  vars:
    scale_out: false
    use_sapconf: false
    use_reboottimeout: 600
    saptune_solution: HANA
    platform: azure
    cluster_node: true

  tasks:
    # Ensure required installation of required packages
    - name: Ensure libssl 2.1 is installed on distributed Systems
      community.general.zypper:
        name: libssh2-1  # Caution, no version control here (yet)
        state: present
      when: scale_out | bool

    - name: Ensure iscsi is installed
      community.general.zypper:
        name: "{{ item }}"
        state: present
      loop:
        - 'iscsiuio'
        - 'open-iscsi'

    - name: Update old SAPHanaSR on SLE 15-SP1
      community.general.zypper:
        name: SAPHanaSR=0.154.0
        state: present
        replacefiles: true
      when:
        - ansible_facts['distribution_version'] == '15.1'
      register: result
      until: result is succeeded
      retries: 3
      delay: 60

      # 3018133 - Linux: Running SAP applications compiled with GCC 10.x
    - name: Ensure GCC10 is installed
      community.general.zypper:
        name: "{{ item }}"
        state: present
        oldpackage: true
      loop:
        - 'libgcc_s1>=10.2.1'
        - 'libstdc++6>=10.2.1'
        - 'libatomic1>=10.2.1'
      register: result
      until: result is succeeded
      retries: 3
      delay: 60

    - name: Configure sapconf based systems
      ansible.builtin.include_tasks: ./tasks/sapconf.yaml
      when: use_sapconf | bool

    # saptune to be handled here with more included tasks!
    - name: Configure saptune based systems
      ansible.builtin.include_tasks: ./tasks/saptune.yaml
      when: not use_sapconf | bool


   # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/reboot_module.html#parameters
   # reboot_timeout Maximum seconds to wait for machine to reboot and respond to a test command.  Default: 600
  handlers:
    - name: Reboot
      ansible.builtin.reboot:
        reboot_timeout: "{{ use_reboottimeout | int }}"
