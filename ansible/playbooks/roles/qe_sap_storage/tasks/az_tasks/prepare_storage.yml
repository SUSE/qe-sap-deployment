---

# Striped volume
- name: "SAP Storage Preparation - Striped: {{ [qe_sap_storage_cloud_type | upper, qe_sap_storage_az_vmsize, item.value.name] | join(' - ') }}"
  when:
    - "item.value.numluns != '1'"
  block:
    # Get LUNs from metadata
    - name: "SAP Storage Preparation - Get LUNs from metadata: {{ [qe_sap_storage_cloud_type | upper, qe_sap_storage_az_vmsize, item.value.name] | join(' - ') }}"
      ansible.builtin.shell: |
        set -o pipefail
        for i in {1..{{ item.value.numluns }}}
        do
          {{ item.value.vg }}${i}lun="{{ qe_sap_storage_az_lun }} \
            `awk '/caching/ { r=""; f=1 } f { r = (r ? r ORS : "") $0 } \
            /writeAcceleratorEnabled/ \
            { if (f && r ~ /{{ item.value.name }}${i}/) print r; f=0 }' \
            {{ qe_sap_storage_az_imds_json }} \
            | grep lun | sed 's/[^0-9]*//g'`"
          echo ${{ item.value.vg }}${i}lun
        done
      args:
        executable: /bin/bash
      register: pvs_reg
      changed_when: false


    - name: Records pvs list
      ansible.builtin.set_fact:
        pvs_list: "{{ pvs_reg.stdout.split() }}"

    # Create Volume Group
    - name: "SAP Storage Preparation - Volume Group Striped: {{ [qe_sap_storage_cloud_type | upper, qe_sap_storage_az_vmsize, item.value.name] | join(' - ') }}"
      community.general.lvg:
        vg: "{{ item.value.vg }}"
        pvs: "{{ pvs_list | join(',') }}"
        force: true

    # Create Logical Group
    - name: "SAP Storage Preparation - Logical Volume - Striped: {{ [qe_sap_storage_cloud_type | upper, qe_sap_storage_az_vmsize, item.value.name] | join(' - ') }}"
      community.general.lvol:
        vg: "{{ item.value.vg }}"
        lv: "{{ item.value.lv }}"
        size: 100%VG
        opts: "-i{{ item.value.numluns }} -I{{ item.value.stripesize }}"


# Single volume
- name: "SAP Storage Preparation - Single Volume: {{ [qe_sap_storage_cloud_type | upper, qe_sap_storage_az_vmsize, item.value.name] | join(' - ') }}"
  when:
    - "item.value.numluns == '1'"
  block:

    # Get LUNs from metadata
    - name: "SAP Storage Preparation - Get LUNs from metadata: {{ [qe_sap_storage_cloud_type | upper, qe_sap_storage_az_vmsize, item.value.name] | join(' - ') }}"
      ansible.builtin.shell: |
        set -o pipefail
        {{ item.value.vg }}lun="{{ qe_sap_storage_az_lun }} \
          `awk '/caching/ { r=""; f=1 } f { r = (r ? r ORS : "") $0 } \
          /writeAcceleratorEnabled/ \
          { if (f && r ~ /{{ item.value.name }}/) print r; f=0 }' \
          {{ qe_sap_storage_az_imds_json }} \
          | grep lun | sed 's/[^0-9]*//g'`"
        echo ${{ item.value.vg }}lun
      args:
        executable: /bin/bash
      register: pvs_reg
      changed_when: false

    - name: Records pvs
      ansible.builtin.set_fact:
        pvs_one: "{{ pvs_reg.stdout }}"

    # Create Volume Group
    - name: "SAP Storage Preparation - Volume Group One: {{ [qe_sap_storage_cloud_type | upper, qe_sap_storage_az_vmsize, item.value.name] | join(' - ') }}"
      community.general.lvg:
        vg: "{{ item.value.vg }}"
        pvs: "{{ pvs_one }}"
        force: true

    # Create Logical Group
    - name: "SAP Storage Preparation - Logical Volume - One: {{ [qe_sap_storage_cloud_type | upper, qe_sap_storage_az_vmsize, item.value.name] | join(' - ') }}"
      community.general.lvol:
        vg: "{{ item.value.vg }}"
        lv: "{{ item.value.lv }}"
        size: 100%VG


# Create Filesystem
- name: "SAP Storage Preparation - Filesystem: {{ [qe_sap_storage_cloud_type | upper, qe_sap_storage_az_vmsize, item.value.name] | join(' - ') }}"
  community.general.filesystem:
    fstype: xfs
    dev: "/dev/{{ item.value.vg }}/{{ item.value.lv }}"

# Mount Filesystem
- name: "SAP Storage Preparation - Mount: {{ [qe_sap_storage_cloud_type | upper, qe_sap_storage_az_vmsize, item.value.name] | join(' - ') }}"
  ansible.posix.mount:
    path: "{{ item.value.directory }}"
    fstype: xfs
    src: "/dev/mapper/{{ item.value.vg }}-{{ item.value.lv }}"
    state: mounted
