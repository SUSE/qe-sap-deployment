---
- name: Get cluster status
  ansible.builtin.command:
    cmd: crm configure show
  register: crm_conf_hana_show
  changed_when: crm_conf_hana_show.rc == 0
  when: is_primary

- name: Set hana crm facts
  ansible.builtin.set_fact:
    crm_maintenance_mode: "{{ (crm_conf_hana_show.stdout | regex_search('maintenance-mode=([a-z]*)', '\\1'))[0] | default('unknown') }}"
    stonith_timeout: "{{ crm_conf_hana_show.stdout | regex_search('stonith-timeout') }}"  # this should be variable!
    hana_resource: "{{ crm_conf_hana_show.stdout | regex_search('primitive rsc_SAPHanaCtl_') }}"
    hana_clone: "{{ crm_conf_hana_show.stdout | regex_search('ms ms(.)_SAPHanaCtl_') }}"
    hana_topology_resource: "{{ crm_conf_hana_show.stdout | regex_search('primitive rsc_SAPHanaTpg') }}"
    hana_topology_clone: "{{ crm_conf_hana_show.stdout | regex_search('clone cln_SAPHanaTpg') }}"
    hana_filesystem_resource: "{{ crm_conf_hana_show.stdout | regex_search('primitive rsc_SAPHanaFil_') }}"
    hana_filesystem_clone: "{{ crm_conf_hana_show.stdout | regex_search('primitive cln_SAPHanaFil_') }}"
    ip_resource: "{{ crm_conf_hana_show.stdout | regex_search('primitive rsc_ip_') }}"
    ip_nc: "{{ crm_conf_hana_show.stdout | regex_search('primitive rsc_socat_') }}"
    ip_grp: "{{ crm_conf_hana_show.stdout | regex_search('group g_ip_') }}"
    ip_colo: "{{ crm_conf_hana_show.stdout | regex_search('colocation col_saphana_ip_') }}"
    cluster_order: "{{ crm_conf_hana_show.stdout | regex_search('order ord_SAPHana') }}"
  when: is_primary
  changed_when: false

- name: Gather package facts
  ansible.builtin.package_facts:
    manager: auto

- name: Set variables for clone command and promoted term
  ansible.builtin.set_fact:
    clone_command: >-
      {{ 'ms' if ansible_facts.packages['pacemaker'][0].version is version('2.1.9', '<')
         else 'clone' }}
    promoted_term: >-
      {{ 'Master' if ansible_facts.packages['pacemaker'][0].version is version('2.1.9', '<')
         else 'Promoted' }}

- name: Create HANA topology resource
  ansible.builtin.command:
    cmd: >-
      crm configure primitive
      rsc_SAPHanaTpg_{{ sap_hana_install_sid }}_HDB{{ sap_hana_install_instance_number }}
      ocf:suse:SAPHanaTopology
      operations
      $id="rsc_sap2_{{ sap_hana_install_sid }}_HDB{{ sap_hana_install_instance_number }}-operations"
      op monitor interval="10" timeout="600"
      op start interval="0" timeout="600"
      op stop interval="0" timeout="300"
      params
      SID="{{ sap_hana_install_sid }}"
      InstanceNumber="{{ sap_hana_install_instance_number }}"
  when:
    - is_primary
    - hana_topology_resource | length == 0
  register: result
  changed_when: result.rc == 0

- name: Create HANA topology clone
  ansible.builtin.command:
    cmd: >-
      crm configure clone
      cln_SAPHanaTpg_{{ sap_hana_install_sid }}_HDB{{ sap_hana_install_instance_number }}
      rsc_SAPHanaTpg_{{ sap_hana_install_sid }}_HDB{{ sap_hana_install_instance_number }}
      meta
      clone-node-max="1"
      target-role="Started"
      interleave="true"
  when:
    - is_primary
    - hana_topology_clone | length == 0
  register: result
  changed_when: result.rc == 0

- name: Create HANA resource
  ansible.builtin.command:
    cmd: >-
      crm configure primitive
      {{ rsc_saphanactl }}
      ocf:suse:SAPHana
      operations
      $id="rsc_sap_{{ sap_hana_install_sid }}_HDB{{ sap_hana_install_instance_number }}-operations"
      op start interval="0" timeout="3600"
      op stop interval="0" timeout="3600"
      op promote interval="0" timeout="3600"
      op demote interval="0" timeout="3600"
      op monitor interval="60" role="Master" timeout="700"
      op monitor interval="61" role="Slave" timeout="700"
      params
      SID="{{ sap_hana_install_sid }}"
      InstanceNumber="{{ sap_hana_install_instance_number }}"
      PREFER_SITE_TAKEOVER="true"
      DUPLICATE_PRIMARY_TIMEOUT="7200"
      AUTOMATED_REGISTER="false"
  when:
    - is_primary
    - hana_resource | length == 0
    - not use_hana_sr_angi | bool
  register: result
  changed_when: result.rc == 0

- name: Create HANA angi resource
  ansible.builtin.command:
    cmd: >-
      crm configure primitive
      {{ rsc_saphanactl }}
      ocf:suse:SAPHanaController
      op start interval="0" timeout="3600"
      op stop interval="0" timeout="3600"
      op promote interval="0" timeout="900"
      op demote interval="0" timeout="320"
      op monitor interval="60" role="Promoted" timeout="700"
      op monitor interval="61" role="Unpromoted" timeout="700"
      params
      SID="{{ sap_hana_install_sid }}"
      InstanceNumber="{{ sap_hana_install_instance_number }}"
      PREFER_SITE_TAKEOVER="true"
      DUPLICATE_PRIMARY_TIMEOUT="7200"
      AUTOMATED_REGISTER="false"
      meta
      priority="100"
  when:
    - is_primary
    - hana_resource | length == 0
    - use_hana_sr_angi | bool
  register: result
  changed_when: result.rc == 0

# Add HANA resource controller clone/ms into the cluster configuration
# in maintenance mode, as described in
# https://documentation.suse.com/sbp/sap-15/html/SLES4SAP-hana-sr-guide-PerfOpt-15/index.html#id-saphana
- name: Create HANA resource clone
  ansible.builtin.command:
    cmd: >-
      crm configure {{ clone_command }}
      {{ ms_saphanactl }}
      {{ rsc_saphanactl }}
      meta
      notify="true"
      clone-max="2"
      clone-node-max="1"
      target-role="Started"
      interleave="true"
      maintenance="true"
      {% if clone_command == 'clone' %}promotable="true"{% endif %}
  when:
    - is_primary
    - hana_clone | length == 0
  register: result
  changed_when: result.rc == 0

- name: Create HANA Filesystem resource
  ansible.builtin.command:
    cmd: >-
      crm configure primitive
      rsc_SAPHanaFil_{{ sap_hana_install_sid }}_HDB{{ sap_hana_install_instance_number }}
      ocf:suse:SAPHanaFilesystem
      operations
      $id="rsc_sap3_{{ sap_hana_install_sid }}_HDB{{ sap_hana_install_instance_number }}-operations"
      op start interval="0" timeout="10"
      op stop interval="0" timeout="20"
      op monitor interval="120" timeout="120"
      params
      SID="{{ sap_hana_install_sid }}"
      InstanceNumber="{{ sap_hana_install_instance_number }}"
      ON_FAIL_ACTION="fence"
  register: cmd_crm_chfr_output
  changed_when: cmd_crm_chfr_output.rc != 0
  when:
    - is_primary
    - use_hana_sr_angi | bool
    - hana_filesystem_resource | length == 0

- name: Create HANA Filesystem clone
  ansible.builtin.command:
    cmd: >-
      crm configure clone
      cln_SAPHanaFil_{{ sap_hana_install_sid }}_HDB{{ sap_hana_install_instance_number }}
      rsc_SAPHanaFil_{{ sap_hana_install_sid }}_HDB{{ sap_hana_install_instance_number }}
      meta
      clone-max="2"
      clone-node-max="1"
      target-role="Started"
      interleave="true"
  register: cmd_crm_chfc_output
  changed_when: cmd_crm_chfc_output.rc != 0
  when:
    - is_primary
    - use_hana_sr_angi | bool
    - hana_filesystem_clone | length == 0

- name: Wait for cluster to settle
  ansible.builtin.command:
    cmd: cs_wait_for_idle -s 5
  when:
    - is_primary
  changed_when: false

- name: Configure colocation [aws]
  ansible.builtin.command:
    cmd: >-
      crm configure colocation
      col_saphana_ip_{{ sap_hana_install_sid }}_HDB{{ sap_hana_install_instance_number }}
      2000:
      rsc_ip_{{ sap_hana_install_sid }}_HDB{{ sap_hana_install_instance_number }}:Started
      {{ ms_saphanactl }}:{{ promoted_term }}
  when:
    - is_primary
    - ip_colo | length == 0
    - cloud_platform_is_aws
  register: result
  changed_when: result.rc == 0

- name: Configure colocation [gcp]
  ansible.builtin.command:
    cmd: >-
      crm configure colocation
      col_saphana_ip_{{ sap_hana_install_sid }}_HDB{{ sap_hana_install_instance_number }}
      4000:
      rsc_ip_{{ sap_hana_install_sid }}_HDB{{ sap_hana_install_instance_number }}:Started
      {{ ms_saphanactl }}:{{ promoted_term }}
  when:
    - is_primary
    - ip_colo | length == 0
    - cloud_platform_is_gcp
  register: result
  changed_when: result.rc == 0

- name: Wait for cluster to settle
  ansible.builtin.command:
    cmd: cs_wait_for_idle -s 5
  when:
    - is_primary
    - ip_colo | length == 0
  changed_when: false

# Order configured as documentation for both AWS and GCP dictates
# AWS: https://documentation.suse.com/sbp/sap-15/html/SLES4SAP-hana-sr-guide-perfopt-15-aws/index.html#id-constraints
# GCP: https://cloud.google.com/solutions/sap/docs/sap-hana-ha-config-sles#create_the_saphana_primitive_resource
- name: Configure order
  ansible.builtin.command:
    cmd: >-
      crm configure order
      ord_SAPHana
      Optional:
      cln_SAPHanaTpg_{{ sap_hana_install_sid }}_HDB{{ sap_hana_install_instance_number }}
      {{ ms_saphanactl }}
  when:
    - is_primary
    - cluster_order | length == 0
  register: result
  changed_when: result.rc == 0

- name: Wait for cluster to settle
  ansible.builtin.command:
    cmd: cs_wait_for_idle -s 5
  when:
    - is_primary
    - cluster_order | length == 0
  changed_when: false

- name: Refresh SAPHana resource clone
  ansible.builtin.command:
    cmd: "crm resource refresh {{ ms_saphanactl }}"
  when: is_primary
  changed_when: false

- name: Wait for cluster to settle
  ansible.builtin.command:
    cmd: cs_wait_for_idle -s 5
  when: is_primary
  changed_when: false

- name: Remove maintenance mode from resource clone
  ansible.builtin.command:
    cmd: "crm resource maintenance {{ ms_saphanactl }} off"
  when: is_primary
  changed_when: false

- name: Wait for cluster to settle
  ansible.builtin.command:
    cmd: cs_wait_for_idle -s 5
  when: is_primary
  changed_when: false

- name: Get cluster state
  ansible.builtin.command:
    cmd: crm status full
  register: reg_crm_status
  when: is_primary
  changed_when: reg_crm_status.stdout | length != 0

- name: Cleanup if needed
  ansible.builtin.command:
    cmd: "crm resource cleanup {{ rsc_saphanactl }}"
  retries: 3
  delay: 10
  when:
    - reg_crm_status.stdout | regex_search('Failed Resource Actions') | trim | length != 0
    - is_primary
  changed_when: false

- name: Wait for cluster to settle
  ansible.builtin.command:
    cmd: cs_wait_for_idle -s 5
  when: is_primary
  changed_when: false

# For debug purpose only
- name: Get cluster status at the end
  ansible.builtin.command:
    cmd: crm configure show
  changed_when: false
