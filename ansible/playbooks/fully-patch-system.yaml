---
- name: Fully patch playbookhosts
  hosts: all
  remote_user: cloudadmin
  become: true
  become_user: root
  vars:
    # Set use_reboottimeout default value to 1200,
    # as for AWS 'r5b.metal' instance type the reboot elapses at least 800 seconds
    use_reboottimeout: 1200
    use_connecttimeout: 10

  tasks:
    - name: Check if Zypper lock file exists
      stat:
        path: /var/run/zypp.pid
      register: lockfile_check
      become: yes

    - name: Get PID from Zypper lock file
      slurp:
        src: /var/run/zypp.pid
      register: pid_content
      become: yes
      when: lockfile_check.stat.exists and lockfile_check.stat.size > 0

    - name: Set PID variable
      set_fact:
        zypper_pid: "{{ (pid_content['content'] | b64decode).strip() }}"
      when: lockfile_check.stat.exists and lockfile_check.stat.size > 0

    - name: Kill process with the PID
      command: kill -9 {{ zypper_pid }}
      become: yes
      ignore_errors: yes
      when: zypper_pid is defined

    - name: Wait to confirm the process is dead
      command: ps -p {{ zypper_pid }} -o comm=
      register: process_check
      retries: 5
      delay: 2
      until: process_check.rc != 0
      failed_when: false
      when: zypper_pid is defined

    - name: Remove stale Zypper lock file
      file:
        path: /var/run/zypp.pid
        state: absent
      become: yes
      when: lockfile_check.stat.exists and (lockfile_check.stat.size == 0 or zypper_pid is defined)

    # Fully patch system
    - name: Apply all available patches
      community.general.zypper:
        name: '*'
        state: latest
        type: patch
      environment:
        ZYPP_LOCK_TIMEOUT: 120
      notify: Reboot after patch

  handlers:
    - name: Reboot after patch
      ansible.builtin.reboot:
        msg: "Reboot initiated by Ansible - after full patch system"
        reboot_timeout: "{{ use_reboottimeout | int }}"
        connect_timeout: "{{ use_connecttimeout | int }}"
