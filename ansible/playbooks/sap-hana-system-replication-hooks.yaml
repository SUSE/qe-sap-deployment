---
- hosts: hana
  remote_user: cloudadmin
  become: true
  become_user : root
  pre_tasks:
  - name: Source hana install variables
    include_vars: ./vars/sap-hana-install_vars.yaml
  vars:
    hooks_dir: myHooks
    site_a: node01 
    site_b: node02

  tasks:

  - name: Ensure hooks directory exists
    ansible.builtin.file:
      path: "/hana/shared/{{ hooks_dir }}"
      owner: "{{ sap_hana_install_sid | lower }}adm"
      group: sapsys
      state: directory
      mode: '0775'

  - name: Copy system replication hook file
    ansible.builtin.copy:
      src:  /usr/share/SAPHanaSR/SAPHanaSR.py
      remote_src: yes
      dest: "/hana/shared/{{ hooks_dir }}/SAPHanaSR.py"
      owner: "{{ sap_hana_install_sid | lower }}adm"
      group: sapsys
      mode: '660'
    register: copy_result

  - name: Stop HANA
    ansible.builtin.command: "/usr/sap/hostctrl/exe/sapcontrol -nr {{ sap_hana_install_instance_number }} -function StopWait 600 10" # Stopwait will timeout after 600 seconds.
    when: copy_result.changed # only stop HANA if the copy file did something, otherwise we'll stop it for no reason

  - name: Ensure ha_dr_provider_SAPHanaSR section exists in global.ini
    community.general.ini_file:
      path: /usr/sap/HDB/SYS/global/hdb/custom/config/global.ini
      section: "{{ item.section }}"
      option: "{{ item.key }}"
      value: "{{ item.value }}"
      mode: '0644'
      backup: yes
      
    with_items: 
      - { 'section': 'ha_dr_provider_SAPHanaSR', 'key': 'provider', 'value': 'SAPHanaSR'}
      - { 'section': 'ha_dr_provider_SAPHanaSR', 'key': 'path', 'value': '/hana/shared/{{ hooks_dir }}'}
      - { 'section': 'ha_dr_provider_SAPHanaSR', 'key': 'execution_order', 'value': '1'}
      - { 'section': 'trace', 'key': 'ha_dr_saphanasr', 'value': 'info'}
    when: copy_result.changed
  
  - name: Start HANA primary
    ansible.builtin.command: "/usr/sap/hostctrl/exe/sapcontrol -nr {{ sap_hana_install_instance_number }} -function StartWait 600 10"
    when:
      - copy_result.changed # only start HANA if we stopped it
      - ansible_hostname == 'vmahana01'

  - name: Start HANA secondary
    ansible.builtin.command: "/usr/sap/hostctrl/exe/sapcontrol -nr {{ sap_hana_install_instance_number }} -function StartWait 600 10"
    when:
      - copy_result.changed # only start HANA if we stopped it
      - ansible_hostname == 'vmahana02'



  - name: Add hooks into sudoers
    ansible.builtin.lineinfile:
      path: /etc/sudoers.d/HanaSystemReplication
      state: present
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
      validate: /usr/sbin/visudo -cf %s
      create: yes
      mode: '0440'
    with_items: 
     - { 'regexp': '^#ANSIBLE MANAGED DOCUMENT',    'line': '#ANSIBLE MANAGED DOCUMENT - no manual edits!'}
     - { 'regexp': '^Cmnd_Alias SOK_SITEA',    'line': 'Cmnd_Alias SOK_SITEA   = /usr/sbin/crm_attribute -n hana_{{ sap_hana_install_sid | lower }}_site_srHook_{{ site_a }} -v SOK   -t crm_config -s SAPHanaSR'}
     - { 'regexp': '^Cmnd_Alias SFAIL_SITEA ', 'line': 'Cmnd_Alias SFAIL_SITEA = /usr/sbin/crm_attribute -n hana_{{ sap_hana_install_sid | lower }}_site_srHook_{{ site_a }} -v SFAIL -t crm_config -s SAPHanaSR'}
     - { 'regexp': '^Cmnd_Alias SOK_SITEB',    'line': 'Cmnd_Alias SOK_SITEB   = /usr/sbin/crm_attribute -n hana_{{ sap_hana_install_sid | lower }}_site_srHook_{{ site_b }} -v SOK   -t crm_config -s SAPHanaSR'}
     - { 'regexp': '^Cmnd_Alias SFAIL_SITEB',  'line': 'Cmnd_Alias SFAIL_SITEB = /usr/sbin/crm_attribute -n hana_{{ sap_hana_install_sid | lower }}_site_srHook_{{ site_b }} -v SFAIL -t crm_config -s SAPHanaSR'}
     - { 'regexp': '^{{ sap_hana_install_sid | lower }}adm ALL=(ALL) NOPASSWD',  'line': '{{ sap_hana_install_sid | lower }}adm ALL=(ALL) NOPASSWD: SOK_SITEA, SFAIL_SITEA, SOK_SITEB, SFAIL_SITEB'}

